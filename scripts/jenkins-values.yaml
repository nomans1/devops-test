controller:
  admin:
    username: "admin"
    password: "admin123"
  additionalPlugins:
    - job-dsl:1.92
  JCasC:
    configScripts:
      jenkins-config: |
        jenkins:
          systemMessage: "Jenkins configured as code!"
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      scope: GLOBAL
                      id: "github"
                      username: "nomans1"
                      password: "gitPAT"
                      description: "Username/Password Credentials for github"
        unclassified:
          globalLibraries:
            libraries:
              - name: "pipeline-library"
                retriever:
                  modernSCM:
                    scm:
                      git:
                        remote: "https://github.com/nomans1/devops-test.git"
                        credentialsId: "github"      
        
        jobs:
          - script: |
              multibranchPipelineJob('devops-test') {
                  branchSources {
                      git {
                          id = 'devops-test'
                          remote('https://github.com/nomans1/devops-test.git')
                          credentialsId('github')
                          includes('develop')
                      }
                  }
                  factory {
                    workflowBranchProjectFactory {
                      scriptPath('jenkins/Jenkinsfile')
                    }
                  }  
              }
agent:  
  yamlTemplate: |-
    apiVersion: v1
    kind: Pod
    metadata:
    name: build-agent
    labels:
      jenkins: slave
      jenkins/docker: 'true'
    spec:
      activeDeadlineSeconds: 5400
      containers:
      - name: nodejs
        image: node:18
        command:
        - cat
        tty: true
      - name: kube-tools
        image: dtzar/helm-kubectl
        command:
        - cat
        tty: true        
      - name: docker
        image: docker:24.0.7
        volumeMounts:
        - name: dockersock
          mountPath: "/var/run/docker.sock"
        command:
        - cat
        tty: true
      volumes:
        - name: docker-config
          configMap:
            name: docker-config
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock

           


